"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const lucide_react_1 = require("lucide-react");
const Dashboard = ({ devices = [] }) => {
    const connectionStatus = devices.length > 0 ? "connected" : "disconnected";
    const handleConnect = (deviceId) => {
        console.log(`Connecting to device: ${deviceId}`);
        // Implementation for connecting to device
    };
    const handleDetails = (deviceId) => {
        console.log(`Showing details for device: ${deviceId}`);
        // Implementation for showing device details
    };
    return ((0, jsx_runtime_1.jsx)("div", { className: "h-full bg-gray-100", children: (0, jsx_runtime_1.jsxs)("div", { className: "w-full bg-white rounded-lg shadow-lg overflow-hidden", children: [(0, jsx_runtime_1.jsx)("div", { className: "p-4 bg-gray-50 border-b flex justify-between items-center", children: (0, jsx_runtime_1.jsxs)("div", { className: "flex items-center gap-2", children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Activity, { className: "h-5 w-5 text-blue-500" }), (0, jsx_runtime_1.jsx)("h1", { className: "text-sm font-medium", children: "Network Dashboard" })] }) }), (0, jsx_runtime_1.jsxs)("div", { className: "p-4 border-b", children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex items-center justify-between mb-4", children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex items-center gap-2", children: [connectionStatus === "connected" ? ((0, jsx_runtime_1.jsx)(lucide_react_1.Wifi, { className: "text-green-500" })) : ((0, jsx_runtime_1.jsx)(lucide_react_1.WifiOff, { className: "text-red-500" })), (0, jsx_runtime_1.jsx)("span", { className: "capitalize", children: connectionStatus })] }), (0, jsx_runtime_1.jsxs)("div", { className: "text-sm text-gray-500", children: [devices.length, " ", devices.length === 1 ? 'device' : 'devices', " connected"] })] }), (0, jsx_runtime_1.jsx)("div", { className: "space-y-4", children: devices.length > 0 ? (devices.map((device) => ((0, jsx_runtime_1.jsxs)("div", { className: "bg-white p-4 rounded-lg shadow-md hover:shadow-lg transition-shadow", children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex justify-between items-center mb-3", children: [(0, jsx_runtime_1.jsx)("h2", { className: "font-medium", children: device.name }), (0, jsx_runtime_1.jsx)("span", { className: `px-2 py-1 rounded-full text-xs ${device.status === 'online' ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}`, children: device.status })] }), (0, jsx_runtime_1.jsxs)("div", { className: "grid grid-cols-3 gap-4", children: [(0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("div", { className: "text-sm text-gray-600 mb-1", children: "CPU" }), (0, jsx_runtime_1.jsx)("div", { className: "w-full bg-gray-200 rounded-full h-2", children: (0, jsx_runtime_1.jsx)("div", { className: "bg-blue-500 h-2 rounded-full transition-all duration-300", style: { width: `${device.cpuUsage || 0}%` } }) }), (0, jsx_runtime_1.jsxs)("div", { className: "text-xs text-gray-500 mt-1", children: [device.cpuUsage, "%"] })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("div", { className: "text-sm text-gray-600 mb-1", children: "RAM" }), (0, jsx_runtime_1.jsx)("div", { className: "w-full bg-gray-200 rounded-full h-2", children: (0, jsx_runtime_1.jsx)("div", { className: "bg-green-500 h-2 rounded-full transition-all duration-300", style: { width: `${device.ramUsage || 0}%` } }) }), (0, jsx_runtime_1.jsxs)("div", { className: "text-xs text-gray-500 mt-1", children: [device.ramUsage, "%"] })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("div", { className: "text-sm text-gray-600 mb-1", children: "Network" }), (0, jsx_runtime_1.jsx)("div", { className: "w-full bg-gray-200 rounded-full h-2", children: (0, jsx_runtime_1.jsx)("div", { className: "bg-purple-500 h-2 rounded-full transition-all duration-300", style: { width: `${device.networkUsage || 0}%` } }) }), (0, jsx_runtime_1.jsxs)("div", { className: "text-xs text-gray-500 mt-1", children: [device.networkUsage, "%"] })] })] }), (0, jsx_runtime_1.jsxs)("div", { className: "mt-4 flex justify-between gap-2", children: [(0, jsx_runtime_1.jsx)("button", { onClick: () => handleConnect(device.id), className: "flex-1 bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 transition-colors", children: "Connect" }), (0, jsx_runtime_1.jsx)("button", { onClick: () => handleDetails(device.id), className: "flex-1 bg-gray-500 text-white px-4 py-2 rounded hover:bg-gray-600 transition-colors", children: "Details" })] })] }, device.id)))) : ((0, jsx_runtime_1.jsx)("div", { className: "text-center py-8 text-gray-500", children: "No devices found. Please check your connection." })) })] })] }) }));
};
exports.default = Dashboard;
//# sourceMappingURL=Dashboard.js.map